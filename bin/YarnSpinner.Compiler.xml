<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YarnSpinner.Compiler</name>
    </assembly>
    <members>
        <member name="T:Yarn.Compiler.Status">
            <summary>Specifies the result of compiling Yarn code.</summary>
            <remarks>This enum specifies the _type_ of success that resulted.
            Compilation failures will result in a <see cref="T:Yarn.Compiler.ParseException"/>, so they don't get
            a Status.</remarks>
        </member>
        <member name="F:Yarn.Compiler.Status.Succeeded">
            <summary>The compilation succeeded with no errors.</summary>
        </member>
        <member name="F:Yarn.Compiler.Status.SucceededUntaggedStrings">
            <summary>The compilation succeeded, but some strings do not have string tags.</summary>
        </member>
        <member name="T:Yarn.Compiler.StringInfo">
            <summary>
            Information about a string. Stored inside a string table, which is
            produced from the Compiler.
            </summary>
            <remarks>
            You do not create instances of this class yourself. They are
            generated by the <see cref="T:Yarn.Compiler.Compiler"/>.
            </remarks>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.text">
            <summary>
            The original text of the string.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.nodeName">
            <summary>
            The name of the node that this string was found in.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.lineNumber">
            <summary>
            The line number at which this string was found in the file.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.fileName">
            <summary>
            The name of the file this string was found in.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.isImplicitTag">
            <summary>
            Indicates whether this string's line ID was implicitly
            generated.
            </summary>
            <remarks>
            Implicitly generated line IDs are not guaranteed to remain the
            same across multiple compilations. To ensure that a line ID
            remains the same, you must define it by adding a [line
            tag]({{|ref "/docs/unity/localisation.md"|}}) to the line.
            </remarks>
        </member>
        <member name="F:Yarn.Compiler.StringInfo.metadata">
            <summary>
            The metadata (i.e. hashtags) associated with this string.
            </summary>
            <remarks>
            This array will contain any hashtags associated with this string besides the `#line:`
            hashtag.
            </remarks>
        </member>
        <member name="M:Yarn.Compiler.StringInfo.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Yarn.Compiler.StringInfo"/> struct.
            </summary>
            <param name="text">The text of the string.</param>
            <param name="fileName">The file name.</param>
            <param name="nodeName">The node name.</param>
            <param name="lineNumber">The line number.</param>
            <param name="isImplicitTag">If `true`, this string info is stored with an implicit line ID.</param>
            <param name="metadata">The string's metadata.</param>
        </member>
        <member name="T:Yarn.Compiler.Compiler">
            <summary>
            Compiles Yarn code.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Compiler.invalidNodeTitleNameRegex">
            <summary>A regular expression used to detect illegal characters in node titles.</summary>
        </member>
        <member name="P:Yarn.Compiler.Compiler.CurrentNode">
            <summary>
            Gets the current node to which instructions are being added.
            </summary>
            <value>The current node.</value>
        </member>
        <member name="P:Yarn.Compiler.Compiler.RawTextNode">
            <summary>
            Gets whether we are currently parsing the current node as a
            'raw text' node, or as a fully syntactic node.
            </summary>
            <value>Whether this is a raw text node or not.</value>
        </member>
        <member name="P:Yarn.Compiler.Compiler.Program">
            <summary>
            Gets the program being generated by the compiler.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Compiler.FileName">
            <summary>
            The name of the file we are currently parsing from.
            </summary>
        </member>
        <member name="F:Yarn.Compiler.Compiler.containsImplicitStringTags">
            <summary>
            Indicates whether the file we are currently parsing contains
            string tags that were implicitly generated.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Compiler.CompileFile(System.String,Yarn.Program@,System.Collections.Generic.IDictionary{System.String,Yarn.Compiler.StringInfo}@)">
            <summary>
            Reads the contents of a file at a given path, and generates a program and a
            derived string table from its contents.
            </summary>
            <param name="path">The path to the file containing the
            program.</param>
            <param name="program">On return, contains the compiled
            program.</param>
            <param name="stringTable">On return, contains the string table
            generated from the source code.</param>
            <returns>The status of the compilation.</returns>
            <exception cref="T:Yarn.Compiler.ParseException">Thrown when a parse error
            occurs during compilation.</exception>
        </member>
        <member name="M:Yarn.Compiler.Compiler.CompileString(System.String,System.String,Yarn.Program@,System.Collections.Generic.IDictionary{System.String,Yarn.Compiler.StringInfo}@)">
            <summary>
            Generates a program and a derived string table from the
            contents of a string.
            </summary>
            <param name="text">The source code of the program.</param>
            <param name="fileName">The file name to assign to the compiled
            results.</param>
            <param name="program">On return, contains the compiled
            program.</param>
            <param name="stringTable">On return, contains the string table
            generated from the source code.</param>
            <returns>The status of the compilation.</returns>
            <exception cref="T:Yarn.Compiler.ParseException">Thrown when a parse error
            occurs during compilation.</exception>                
        </member>
        <member name="M:Yarn.Compiler.Compiler.GetTokensFromFile(System.String)">
            <summary>
            Lexes a string containing source code, and returns a list of
            tokens found in the source code.
            </summary>
            <param name="path">The path of the file containing source code
            to extract tokens from.</param>
            <returns>The list of tokens extracted from the source
            code.</returns>
        </member>
        <member name="M:Yarn.Compiler.Compiler.GetTokensFromString(System.String)">
            <summary>
            Lexes a string containing source code, and returns a list of
            tokens found in the source code.
            </summary>
            <param name="text">The source code to extract tokens
            from.</param>
            <returns>The list of tokens extracted from the source
            code.</returns>
        </member>
        <member name="F:Yarn.Compiler.Compiler.stringCount">
            <summary>
            The number of strings encountered so far during compilation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Yarn.Compiler.Compiler.RegisterString(System.String,System.String,System.String,System.Int32,System.String[])" -->
        <member name="M:Yarn.Compiler.Compiler.RegisterLabel(System.String)">
            <summary>
            Generates a unique label name to use in the program.
            </summary>
            <param name="commentary">Any additional text to append to the
            end of the label.</param>
            <returns>The new label name.</returns>
        </member>
        <member name="M:Yarn.Compiler.Compiler.Emit(Yarn.Node,Yarn.Instruction.Types.OpCode,Yarn.Operand[])">
            <summary>
            Creates a new instruction, and appends it to a node in the <see
            cref="P:Yarn.Compiler.Compiler.Program" />.
            </summary>
            <param name="node">The node to append instructions to.</param>
            <param name="code">The opcode of the instruction.</param>
            <param name="operands">The operands to associate with the
            instruction.</param>
        </member>
        <member name="M:Yarn.Compiler.Compiler.Emit(Yarn.Instruction.Types.OpCode,Yarn.Operand[])">
            <summary>
            Creates a new instruction, and appends it to the current node
            in the <see cref="P:Yarn.Compiler.Compiler.Program"/>.
            </summary>
            <param name="code">The opcode of the instruction.</param>
            <param name="operands">The operands to associate with the
            instruction.</param>
        </member>
        <member name="M:Yarn.Compiler.Compiler.GetLineID(YarnSpinnerParser.HashtagContext[])">
            <summary>
            Extracts a line ID from a <see cref="T:YarnSpinnerParser.HashtagContext"/>, if one exists.
            </summary>
            <param name="context">The hashtag parsing context.</param>
            <returns>The line ID if one is present in the hashtag context, otherwise `null`.</returns>
        </member>
        <member name="T:Yarn.Compiler.ParseException">
            <summary>
            An exception representing something going wrong during parsing.
            </summary>
        </member>
        <member name="T:Yarn.Compiler.Utility">
            <summary>
            Utility methods for working with line tags.
            </summary>
        </member>
        <member name="M:Yarn.Compiler.Utility.AddTagsToLines(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Given Yarn source code, adds line tags to the ends of all lines
            that need one and do not already have one.
            </summary>
            <remarks>This method ensures that it does not generate line tags that are already present in the file, or present in the `existingLineTags` collection.
            
            Line tags are added to any line of source code that contains user-visible text: lines, options, and shortcut options.
            </remarks>
            <param name="contents">The source code to add line tags to.</param>
            <param name="existingLineTags">The collection of line tags already exist elsewhere in the source code; the newly added line tags will not be duplicates of any in this collection.</param>
            <returns>The modified source code, with line tags added.</returns>
        </member>
        <member name="M:Yarn.Compiler.Utility.GenerateString(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Generates a new unique line tag that is not present in
            `existingKeys`.
            </summary>
            <param name="existingKeys">The collection of keys that should
            be considered when generating a new, unique line tag.</param>
            <returns>A unique line tag that is not already present in
            `existingKeys`.</returns>
        </member>
        <member name="T:YarnSpinnerParserBaseListener">
            <summary>
            This class provides an empty implementation of <see cref="T:IYarnSpinnerParserListener"/>,
            which can be extended to create a listener which only needs to handle a subset
            of the available methods.
            </summary>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterDialogue(YarnSpinnerParser.DialogueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.dialogue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitDialogue(YarnSpinnerParser.DialogueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.dialogue"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterFile_hashtag(YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.file_hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitFile_hashtag(YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.file_hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterNode(YarnSpinnerParser.NodeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.node"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitNode(YarnSpinnerParser.NodeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.node"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterHeader(YarnSpinnerParser.HeaderContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.header"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitHeader(YarnSpinnerParser.HeaderContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.header"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterBody(YarnSpinnerParser.BodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.body"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitBody(YarnSpinnerParser.BodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.body"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterStatement(YarnSpinnerParser.StatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitStatement(YarnSpinnerParser.StatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterLine_statement(YarnSpinnerParser.Line_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.line_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitLine_statement(YarnSpinnerParser.Line_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.line_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterLine_formatted_text(YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.line_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitLine_formatted_text(YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.line_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterFormat_function(YarnSpinnerParser.Format_functionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.format_function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitFormat_function(YarnSpinnerParser.Format_functionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.format_function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterKeyValuePairNamed(YarnSpinnerParser.KeyValuePairNamedContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitKeyValuePairNamed(YarnSpinnerParser.KeyValuePairNamedContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterKeyValuePairNumber(YarnSpinnerParser.KeyValuePairNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitKeyValuePairNumber(YarnSpinnerParser.KeyValuePairNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterHashtag(YarnSpinnerParser.HashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitHashtag(YarnSpinnerParser.HashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.hashtag"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterLine_condition(YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.line_condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitLine_condition(YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.line_condition"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpParens(YarnSpinnerParser.ExpParensContext)">
            <summary>
            Enter a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpParens(YarnSpinnerParser.ExpParensContext)">
            <summary>
            Exit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpMultDivMod(YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpMultDivMod(YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpMultDivModEquals(YarnSpinnerParser.ExpMultDivModEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpMultDivModEquals(YarnSpinnerParser.ExpMultDivModEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpComparison(YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Enter a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpComparison(YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Exit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpNegative(YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Enter a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpNegative(YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Exit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpAndOrXor(YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Enter a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpAndOrXor(YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Exit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpPlusMinusEquals(YarnSpinnerParser.ExpPlusMinusEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpPlusMinusEquals(YarnSpinnerParser.ExpPlusMinusEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpAddSub(YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Enter a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpAddSub(YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Exit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpNot(YarnSpinnerParser.ExpNotContext)">
            <summary>
            Enter a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpNot(YarnSpinnerParser.ExpNotContext)">
            <summary>
            Exit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpValue(YarnSpinnerParser.ExpValueContext)">
            <summary>
            Enter a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpValue(YarnSpinnerParser.ExpValueContext)">
            <summary>
            Exit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterExpEquality(YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Enter a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitExpEquality(YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Exit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterValueNumber(YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitValueNumber(YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterValueTrue(YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Enter a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitValueTrue(YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Exit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterValueFalse(YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitValueFalse(YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterValueVar(YarnSpinnerParser.ValueVarContext)">
            <summary>
            Enter a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitValueVar(YarnSpinnerParser.ValueVarContext)">
            <summary>
            Exit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterValueString(YarnSpinnerParser.ValueStringContext)">
            <summary>
            Enter a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitValueString(YarnSpinnerParser.ValueStringContext)">
            <summary>
            Exit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterValueNull(YarnSpinnerParser.ValueNullContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitValueNull(YarnSpinnerParser.ValueNullContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterValueFunc(YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitValueFunc(YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterVariable(YarnSpinnerParser.VariableContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.variable"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitVariable(YarnSpinnerParser.VariableContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.variable"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterFunction(YarnSpinnerParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitFunction(YarnSpinnerParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.function"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterIf_statement(YarnSpinnerParser.If_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.if_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitIf_statement(YarnSpinnerParser.If_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.if_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterIf_clause(YarnSpinnerParser.If_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitIf_clause(YarnSpinnerParser.If_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterElse_if_clause(YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.else_if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitElse_if_clause(YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.else_if_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterElse_clause(YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.else_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitElse_clause(YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.else_clause"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterSetVariableToValue(YarnSpinnerParser.SetVariableToValueContext)">
            <summary>
            Enter a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitSetVariableToValue(YarnSpinnerParser.SetVariableToValueContext)">
            <summary>
            Exit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterSetExpression(YarnSpinnerParser.SetExpressionContext)">
            <summary>
            Enter a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitSetExpression(YarnSpinnerParser.SetExpressionContext)">
            <summary>
            Exit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterCall_statement(YarnSpinnerParser.Call_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.call_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitCall_statement(YarnSpinnerParser.Call_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.call_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterCommand_statement(YarnSpinnerParser.Command_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.command_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitCommand_statement(YarnSpinnerParser.Command_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.command_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterCommand_formatted_text(YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.command_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitCommand_formatted_text(YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.command_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterShortcut_option_statement(YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitShortcut_option_statement(YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterShortcut_option(YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitShortcut_option(YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterOptionLink(YarnSpinnerParser.OptionLinkContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitOptionLink(YarnSpinnerParser.OptionLinkContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterOptionJump(YarnSpinnerParser.OptionJumpContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitOptionJump(YarnSpinnerParser.OptionJumpContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterOption_formatted_text(YarnSpinnerParser.Option_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.option_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitOption_formatted_text(YarnSpinnerParser.Option_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.option_formatted_text"/>.
            <para>The default implementation does nothing.</para>
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.EnterEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.ExitEveryRule(Antlr4.Runtime.ParserRuleContext)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:YarnSpinnerParserBaseListener.VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode)">
            <inheritdoc/>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="T:YarnSpinnerParserBaseVisitor`1">
            <summary>
            This class provides an empty implementation of <see cref="T:IYarnSpinnerParserVisitor`1"/>,
            which can be extended to create a visitor which only needs to handle a subset
            of the available methods.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitDialogue(YarnSpinnerParser.DialogueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.dialogue"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitFile_hashtag(YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.file_hashtag"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitNode(YarnSpinnerParser.NodeContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.node"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitHeader(YarnSpinnerParser.HeaderContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.header"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitBody(YarnSpinnerParser.BodyContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.body"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitStatement(YarnSpinnerParser.StatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitLine_statement(YarnSpinnerParser.Line_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.line_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitLine_formatted_text(YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.line_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitFormat_function(YarnSpinnerParser.Format_functionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.format_function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitKeyValuePairNamed(YarnSpinnerParser.KeyValuePairNamedContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitKeyValuePairNumber(YarnSpinnerParser.KeyValuePairNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitHashtag(YarnSpinnerParser.HashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.hashtag"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitLine_condition(YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.line_condition"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpParens(YarnSpinnerParser.ExpParensContext)">
            <summary>
            Visit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpMultDivMod(YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpMultDivModEquals(YarnSpinnerParser.ExpMultDivModEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpComparison(YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Visit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpNegative(YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Visit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpAndOrXor(YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Visit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpPlusMinusEquals(YarnSpinnerParser.ExpPlusMinusEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpAddSub(YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Visit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpNot(YarnSpinnerParser.ExpNotContext)">
            <summary>
            Visit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpValue(YarnSpinnerParser.ExpValueContext)">
            <summary>
            Visit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitExpEquality(YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Visit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitValueNumber(YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitValueTrue(YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Visit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitValueFalse(YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitValueVar(YarnSpinnerParser.ValueVarContext)">
            <summary>
            Visit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitValueString(YarnSpinnerParser.ValueStringContext)">
            <summary>
            Visit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitValueNull(YarnSpinnerParser.ValueNullContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitValueFunc(YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitVariable(YarnSpinnerParser.VariableContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.variable"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitFunction(YarnSpinnerParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.function"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitIf_statement(YarnSpinnerParser.If_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.if_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitIf_clause(YarnSpinnerParser.If_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.if_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitElse_if_clause(YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.else_if_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitElse_clause(YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.else_clause"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitSetVariableToValue(YarnSpinnerParser.SetVariableToValueContext)">
            <summary>
            Visit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitSetExpression(YarnSpinnerParser.SetExpressionContext)">
            <summary>
            Visit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitCall_statement(YarnSpinnerParser.Call_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.call_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitCommand_statement(YarnSpinnerParser.Command_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.command_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitCommand_formatted_text(YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.command_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitShortcut_option_statement(YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitShortcut_option(YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitOptionLink(YarnSpinnerParser.OptionLinkContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitOptionJump(YarnSpinnerParser.OptionJumpContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:YarnSpinnerParserBaseVisitor`1.VisitOption_formatted_text(YarnSpinnerParser.Option_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.option_formatted_text"/>.
            <para>
            The default implementation returns the result of calling <see cref="M:Antlr4.Runtime.Tree.AbstractParseTreeVisitor`1.VisitChildren(Antlr4.Runtime.Tree.IRuleNode)"/>
            on <paramref name="context"/>.
            </para>
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="T:IYarnSpinnerParserListener">
            <summary>
            This interface defines a complete listener for a parse tree produced by
            <see cref="T:YarnSpinnerParser"/>.
            </summary>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterDialogue(YarnSpinnerParser.DialogueContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitDialogue(YarnSpinnerParser.DialogueContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterFile_hashtag(YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitFile_hashtag(YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterNode(YarnSpinnerParser.NodeContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitNode(YarnSpinnerParser.NodeContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterHeader(YarnSpinnerParser.HeaderContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitHeader(YarnSpinnerParser.HeaderContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterBody(YarnSpinnerParser.BodyContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitBody(YarnSpinnerParser.BodyContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterStatement(YarnSpinnerParser.StatementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitStatement(YarnSpinnerParser.StatementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterLine_statement(YarnSpinnerParser.Line_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitLine_statement(YarnSpinnerParser.Line_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterLine_formatted_text(YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitLine_formatted_text(YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterFormat_function(YarnSpinnerParser.Format_functionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.format_function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitFormat_function(YarnSpinnerParser.Format_functionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.format_function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterKeyValuePairNamed(YarnSpinnerParser.KeyValuePairNamedContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitKeyValuePairNamed(YarnSpinnerParser.KeyValuePairNamedContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterKeyValuePairNumber(YarnSpinnerParser.KeyValuePairNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitKeyValuePairNumber(YarnSpinnerParser.KeyValuePairNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterHashtag(YarnSpinnerParser.HashtagContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitHashtag(YarnSpinnerParser.HashtagContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterLine_condition(YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitLine_condition(YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpParens(YarnSpinnerParser.ExpParensContext)">
            <summary>
            Enter a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpParens(YarnSpinnerParser.ExpParensContext)">
            <summary>
            Exit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpMultDivMod(YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpMultDivMod(YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpMultDivModEquals(YarnSpinnerParser.ExpMultDivModEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpMultDivModEquals(YarnSpinnerParser.ExpMultDivModEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpComparison(YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Enter a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpComparison(YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Exit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpNegative(YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Enter a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpNegative(YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Exit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpAndOrXor(YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Enter a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpAndOrXor(YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Exit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpPlusMinusEquals(YarnSpinnerParser.ExpPlusMinusEqualsContext)">
            <summary>
            Enter a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpPlusMinusEquals(YarnSpinnerParser.ExpPlusMinusEqualsContext)">
            <summary>
            Exit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpAddSub(YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Enter a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpAddSub(YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Exit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpNot(YarnSpinnerParser.ExpNotContext)">
            <summary>
            Enter a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpNot(YarnSpinnerParser.ExpNotContext)">
            <summary>
            Exit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpValue(YarnSpinnerParser.ExpValueContext)">
            <summary>
            Enter a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpValue(YarnSpinnerParser.ExpValueContext)">
            <summary>
            Exit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterExpEquality(YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Enter a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitExpEquality(YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Exit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterValueNumber(YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitValueNumber(YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterValueTrue(YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Enter a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitValueTrue(YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Exit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterValueFalse(YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitValueFalse(YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterValueVar(YarnSpinnerParser.ValueVarContext)">
            <summary>
            Enter a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitValueVar(YarnSpinnerParser.ValueVarContext)">
            <summary>
            Exit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterValueString(YarnSpinnerParser.ValueStringContext)">
            <summary>
            Enter a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitValueString(YarnSpinnerParser.ValueStringContext)">
            <summary>
            Exit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterValueNull(YarnSpinnerParser.ValueNullContext)">
            <summary>
            Enter a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitValueNull(YarnSpinnerParser.ValueNullContext)">
            <summary>
            Exit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterValueFunc(YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Enter a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitValueFunc(YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Exit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterVariable(YarnSpinnerParser.VariableContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitVariable(YarnSpinnerParser.VariableContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterFunction(YarnSpinnerParser.FunctionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitFunction(YarnSpinnerParser.FunctionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterIf_statement(YarnSpinnerParser.If_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitIf_statement(YarnSpinnerParser.If_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterIf_clause(YarnSpinnerParser.If_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitIf_clause(YarnSpinnerParser.If_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterElse_if_clause(YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitElse_if_clause(YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterElse_clause(YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitElse_clause(YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterSetVariableToValue(YarnSpinnerParser.SetVariableToValueContext)">
            <summary>
            Enter a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitSetVariableToValue(YarnSpinnerParser.SetVariableToValueContext)">
            <summary>
            Exit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterSetExpression(YarnSpinnerParser.SetExpressionContext)">
            <summary>
            Enter a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitSetExpression(YarnSpinnerParser.SetExpressionContext)">
            <summary>
            Exit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterCall_statement(YarnSpinnerParser.Call_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitCall_statement(YarnSpinnerParser.Call_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterCommand_statement(YarnSpinnerParser.Command_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitCommand_statement(YarnSpinnerParser.Command_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterCommand_formatted_text(YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitCommand_formatted_text(YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterShortcut_option_statement(YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitShortcut_option_statement(YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterShortcut_option(YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitShortcut_option(YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterOptionLink(YarnSpinnerParser.OptionLinkContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitOptionLink(YarnSpinnerParser.OptionLinkContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterOptionJump(YarnSpinnerParser.OptionJumpContext)">
            <summary>
            Enter a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitOptionJump(YarnSpinnerParser.OptionJumpContext)">
            <summary>
            Exit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.EnterOption_formatted_text(YarnSpinnerParser.Option_formatted_textContext)">
            <summary>
            Enter a parse tree produced by <see cref="M:YarnSpinnerParser.option_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="M:IYarnSpinnerParserListener.ExitOption_formatted_text(YarnSpinnerParser.Option_formatted_textContext)">
            <summary>
            Exit a parse tree produced by <see cref="M:YarnSpinnerParser.option_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
        </member>
        <member name="T:IYarnSpinnerParserVisitor`1">
            <summary>
            This interface defines a complete generic visitor for a parse tree produced
            by <see cref="T:YarnSpinnerParser"/>.
            </summary>
            <typeparam name="Result">The return type of the visit operation.</typeparam>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitDialogue(YarnSpinnerParser.DialogueContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.dialogue"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitFile_hashtag(YarnSpinnerParser.File_hashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.file_hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitNode(YarnSpinnerParser.NodeContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.node"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitHeader(YarnSpinnerParser.HeaderContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.header"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitBody(YarnSpinnerParser.BodyContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.body"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitStatement(YarnSpinnerParser.StatementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitLine_statement(YarnSpinnerParser.Line_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.line_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitLine_formatted_text(YarnSpinnerParser.Line_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.line_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitFormat_function(YarnSpinnerParser.Format_functionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.format_function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitKeyValuePairNamed(YarnSpinnerParser.KeyValuePairNamedContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNamed</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitKeyValuePairNumber(YarnSpinnerParser.KeyValuePairNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>KeyValuePairNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.key_value_pair"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitHashtag(YarnSpinnerParser.HashtagContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.hashtag"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitLine_condition(YarnSpinnerParser.Line_conditionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.line_condition"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpParens(YarnSpinnerParser.ExpParensContext)">
            <summary>
            Visit a parse tree produced by the <c>expParens</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpMultDivMod(YarnSpinnerParser.ExpMultDivModContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivMod</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpMultDivModEquals(YarnSpinnerParser.ExpMultDivModEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expMultDivModEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpComparison(YarnSpinnerParser.ExpComparisonContext)">
            <summary>
            Visit a parse tree produced by the <c>expComparison</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpNegative(YarnSpinnerParser.ExpNegativeContext)">
            <summary>
            Visit a parse tree produced by the <c>expNegative</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpAndOrXor(YarnSpinnerParser.ExpAndOrXorContext)">
            <summary>
            Visit a parse tree produced by the <c>expAndOrXor</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpPlusMinusEquals(YarnSpinnerParser.ExpPlusMinusEqualsContext)">
            <summary>
            Visit a parse tree produced by the <c>expPlusMinusEquals</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpAddSub(YarnSpinnerParser.ExpAddSubContext)">
            <summary>
            Visit a parse tree produced by the <c>expAddSub</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpNot(YarnSpinnerParser.ExpNotContext)">
            <summary>
            Visit a parse tree produced by the <c>expNot</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpValue(YarnSpinnerParser.ExpValueContext)">
            <summary>
            Visit a parse tree produced by the <c>expValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitExpEquality(YarnSpinnerParser.ExpEqualityContext)">
            <summary>
            Visit a parse tree produced by the <c>expEquality</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.expression"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitValueNumber(YarnSpinnerParser.ValueNumberContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNumber</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitValueTrue(YarnSpinnerParser.ValueTrueContext)">
            <summary>
            Visit a parse tree produced by the <c>valueTrue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitValueFalse(YarnSpinnerParser.ValueFalseContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFalse</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitValueVar(YarnSpinnerParser.ValueVarContext)">
            <summary>
            Visit a parse tree produced by the <c>valueVar</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitValueString(YarnSpinnerParser.ValueStringContext)">
            <summary>
            Visit a parse tree produced by the <c>valueString</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitValueNull(YarnSpinnerParser.ValueNullContext)">
            <summary>
            Visit a parse tree produced by the <c>valueNull</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitValueFunc(YarnSpinnerParser.ValueFuncContext)">
            <summary>
            Visit a parse tree produced by the <c>valueFunc</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.value"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitVariable(YarnSpinnerParser.VariableContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.variable"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitFunction(YarnSpinnerParser.FunctionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.function"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitIf_statement(YarnSpinnerParser.If_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.if_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitIf_clause(YarnSpinnerParser.If_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitElse_if_clause(YarnSpinnerParser.Else_if_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.else_if_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitElse_clause(YarnSpinnerParser.Else_clauseContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.else_clause"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitSetVariableToValue(YarnSpinnerParser.SetVariableToValueContext)">
            <summary>
            Visit a parse tree produced by the <c>setVariableToValue</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitSetExpression(YarnSpinnerParser.SetExpressionContext)">
            <summary>
            Visit a parse tree produced by the <c>setExpression</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.set_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitCall_statement(YarnSpinnerParser.Call_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.call_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitCommand_statement(YarnSpinnerParser.Command_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.command_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitCommand_formatted_text(YarnSpinnerParser.Command_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.command_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitShortcut_option_statement(YarnSpinnerParser.Shortcut_option_statementContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitShortcut_option(YarnSpinnerParser.Shortcut_optionContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.shortcut_option"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitOptionLink(YarnSpinnerParser.OptionLinkContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionLink</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitOptionJump(YarnSpinnerParser.OptionJumpContext)">
            <summary>
            Visit a parse tree produced by the <c>OptionJump</c>
            labeled alternative in <see cref="M:YarnSpinnerParser.option_statement"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
        <member name="M:IYarnSpinnerParserVisitor`1.VisitOption_formatted_text(YarnSpinnerParser.Option_formatted_textContext)">
            <summary>
            Visit a parse tree produced by <see cref="M:YarnSpinnerParser.option_formatted_text"/>.
            </summary>
            <param name="context">The parse tree.</param>
            <return>The visitor result.</return>
        </member>
    </members>
</doc>
